{"title":"transflow with function generate","author":"Phodal","status":"Doing","priority":"Low","created_date":1638669804,"updated_date":1638669804,"id":17,"content":"\n\n1. transforms.js for loading and process\n\n2. use codeshift to generate different data struct\n\n3. import transform.js to core\n\n4. provide some commons functions\n\n\n## Define flows:\n\n1. use QuakeParser to parse block and generate function\n2. function binding to `.yaml` or `.js` files\n3. loading to webserver for core.\n\none commmits\n\n```bash\ndefine { from(\"todo\", \"blog\", \"yiki\").to(<quake-calendar>) }\n```\n\nsecond commits\n\n```\ndefine {\n    from(\"todo\").to(\"simple_todo\"),\n    from(\"simple_todo\", \"todo\").to(<quake-calendar>);\n}    \n```\n\nparsed:\n\n```json\n{\n  \"routes\": [\n    {\n      \"from\": [\n        {\n          \"field\": \"\"\n        }\n      ],\n      \"to\": \"\",\n      \"name\": \"\",\n      \"is_end_way\": \"\"\n    }\n  ],\n  \"defines\": {\n    \"todo\": {},\n    \"blog\": {},\n    \"yiki\": {}\n  },\n  \"target\": \"quake-calendar\"\n}\n```\n\nsimple query for expression: `simple(\"${body.address.street}\")`ï¼› \n\nalso generate `quake-calendar` date_type from TypeScript/JavaScript to Yaml.\n\n```typescript\ninterface QuakeCalendar {\n   input: {\n      data: \"\"\n   },\n   output: {\n      event: \"\"\n   } \n}\n```\n\nand also output defines if it will save:\n\n```javascript\n\n```\n\n## Camel DSL examples\n\nYAML: https://camel.apache.org/components/3.13.x/others/yaml-dsl.html\n\n```yaml\n- from: (1)\n    uri: \"direct:start\"\n    steps: (2)\n      - filter:\n          expression:\n            simple: \"${in.header.continue} == true\"\n          steps: (2)\n            - to:\n                uri: \"log:filtered\"\n      - to:\n          uri: \"log:original\"\n```\n\n","type":"story"}